server.port = 8081

# Pode?avanja za konekciju na bazu
spring.datasource.url=jdbc:postgresql://localhost:5432/security-app
spring.datasource.username=postgres
spring.datasource.password=super

# Ovo govori Hibernate-u da automatski a?urira ?emu baze na osnovu va?ih @Entity klasa.
spring.jpa.hibernate.ddl-auto=create-drop
spring.jpa.defer-datasource-initialization=true
spring.sql.init.mode=always
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect

# (Opciono, ali korisno) Prikazuje SQL upite u konzoli
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true

# mail sender
spring.mail.host=smtp.gmail.com
spring.mail.port=587
spring.mail.username=predmetisa@gmail.com
spring.mail.password=jkutsthjwisfjgeb
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true

#recaptcha
recaptcha.secret=6Lft_qkrAAAAACSUJqISFZSq6TAGPIetHnoAm-_3

#deo za sertifikate
# Ovo mora biti ta?no 16, 24 ili 32 karaktera za AES
# Ovo je globalni kljuc kojim cemo enkriptovati i kljuc svakog usera
app.keystore.encryption-key=OvoJeNajvecaMogucaTajna!

# KEYCLOAK (za backend autentifikaciju)
# ----------------------
# Keycloak server URL
keycloak.auth-server-url=http://localhost:8080/
# Realm koji koristi?
keycloak.realm=security-app
# Client ID backend aplikacije
keycloak.resource=spring-backend
# Secret client-a (ako je Confidential)
keycloak.credentials.secret=Gy2CPoYvLfWrXUKWlXKL3J2pQA8S5I1j
keycloak.ssl-required=external
keycloak.use-resource-role-mappings=true

# ----------------------
# KEYCLOAK ADMIN CREDENTIALS (za kreiranje korisnika u servisu)
# NE KORISTI keycloak.admin-username/keycloak.admin-password jer Spring adapter ne prepoznaje
# ----------------------
app.keycloak.admin.username=tanjarizovic
app.keycloak.admin.password=18022003da
